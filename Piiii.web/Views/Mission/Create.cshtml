@model Piiii.web.Models.mission

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Layout1.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>mission</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

 
    <div class="form-group">
        @Html.LabelFor(model => model.subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.subject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.subject, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>
 
    <div class="form-group">
        @Html.LabelFor(model => model.place, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.place, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.place, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estimation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.estimation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.estimation, "", new { @class = "text-danger" })
        </div>
    </div>


  

    <div class="form-group">
        @Html.LabelFor(model => model.isProvidedAccd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isProvidedAccd)
                @Html.ValidationMessageFor(model => model.isProvidedAccd, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.isProvidedTrsp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isProvidedTrsp)
                @Html.ValidationMessageFor(model => model.isProvidedTrsp, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.datedebut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.datedebut, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.datedebut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.datefin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.datefin, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.datefin, "", new { @class = "text-danger" })
        </div>
    </div>






    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @{
        var selectList = new SelectList(
            new List<SelectListItem>
            {
new SelectListItem {Text = "Jee", Value = "Jee"},
new SelectListItem {Text = "Dotnet", Value = "Dotnet"},
new SelectListItem {Text = "Symfony", Value = "Symfony"},
new SelectListItem {Text = "php", Value = "php"},
new SelectListItem {Text = "Html", Value = "Html"},
new SelectListItem {Text = "Angular", Value = "Angular"},
            }, "Value", "Text");
    }



    <div class="form-group">
        @Html.LabelFor(model => model.skillsRequired, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.skillsRequired, selectList, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.skillsRequired, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.secondSkill, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.secondSkill, selectList,new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.secondSkill, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.thirdSkill, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.thirdSkill, selectList,new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.thirdSkill, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
